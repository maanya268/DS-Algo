#include <bits/stdc++.h>
using namespace std;

int profit(vector<int> weights, vector<int> prices, int n, int W)
{
    vector<vector<int>> dp(n + 1, vector<int>(W + 1, 0));
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= W; j++)
        {
            int op1 = 0;
            int op2 = 0;
            if (j >= weights[i - 1])
            {
                op1 = prices[i - 1] + dp[i - 1][j - weights[i - 1]];
            }
            op2 = dp[i - 1][j];

            dp[i][j] = max(op1, op2);
        }
    }
    for (int i = 0; i <= n; i++)
    {
        for (int j = 0; j <= W; j++)
        {
            cout << dp[i][j] << " ";
        }
        cout << endl;
    }
    return dp[n][W];
}

int main()
{
    int n;
    cin >> n;
    vector<int> weights(n);
    vector<int> prices(n);

    for (int i = 0; i < n; i++)
    {
        cin >> weights[i];
    }
    for (int i = 0; i < n; i++)
    {
        cin >> prices[i];
    }

    int capacity;
    cin >> capacity;

    cout << profit(weights, prices, n, capacity) << endl;
    return 0;
}
