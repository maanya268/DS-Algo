/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head)
    {
        if(head == NULL)
        {
            return 0;
        }
        if(head->next == NULL)
        {
            return 1;
        }
        
        int count = 0;
        ListNode* temp = head;
        while(temp != NULL)
        {
            count++;
            temp = temp->next;
        }
        return count;
    }
    
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) 
    {
        int l1 = length(headA);
        int l2 = length(headB);
        int diff;
        ListNode* temp1;
        ListNode* temp2;
        
        if(l1 > l2)
        {
            diff = l1-l2;
            temp1 = headA;
            temp2 = headB;
        }
        else
        {
            diff = l2-l1;
            temp1 = headB;
            temp2 = headA;
        }
        
        while(diff--)
        {
            temp1 = temp1->next;
        }
        
        while(temp1 != NULL && temp2 != NULL && temp1 != temp2)
        {
            temp1 = temp1->next;
            temp2 = temp2->next;
        }
        
        if(temp1 == temp2)
        {
            return temp1;
        }
        return NULL;
    }
};
