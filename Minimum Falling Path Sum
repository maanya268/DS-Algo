class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) 
    {
        int n = matrix.size();
        vector<vector<int>> dp(n,vector<int>(n));
        
        for(int i = n-1;i>=0;i--)
        {
            for(int j = n-1;j>=0;j--)
            {
                if(i == n-1)
                {
                    dp[i][j] = matrix[i][j];
                }
                else
                {
                    int op1 = dp[i+1][j];
                    int op2 = INT_MAX;
                    int op3 = INT_MAX;
                    
                    if(j+1 < n)
                    {
                        op2 = dp[i+1][j+1];
                    }
                    if(j-1 >= 0)
                    {
                        op3 = dp[i+1][j-1];
                    }
                    
                    dp[i][j] = min(op1,min(op2,op3)) + matrix[i][j];
                }
            }
        }
        int minm = INT_MAX;
        for(int i = 0;i<n;i++)
        {
            minm = min(minm,dp[0][i]);
        }
        return minm;
        
    }
};
