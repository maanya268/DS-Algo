#include<bits/stdc++.h>
int frogJumpHelper(int n,vector<int> &heights,int i,vector<int> &dp)
{	
	if(i == n-1)
	{
		return 0;
	}
	if(dp[i] != 0)
	{
		return dp[i];
	}
	
	int energy1 = INT_MAX;
	int energy2 = INT_MAX;
	if(i+1 < n)
	{
		energy1 = frogJumpHelper(n,heights,i+1,dp) + abs(heights[i+1] - heights[i]);
	}
	if(i+2 < n)
	{
		energy2 = frogJumpHelper(n,heights,i+2,dp) + abs(heights[i+2] - heights[i]);
	}
	return dp[i] = min(energy1,energy2);
}

int frogJump(int n, vector<int> &heights)
{
	vector<int> dp(n,0);
	return frogJumpHelper(n,heights,0,dp);
}
