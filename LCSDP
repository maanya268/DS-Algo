#include <bits/stdc++.h>
using namespace std;

int main()
{
    string s1;
    string s2;

    cin >> s1 >> s2;

    int n1 = s1.length();
    int n2 = s2.length();

    vector<vector<int>> dp(n1 + 1, vector<int>(n2 + 1, 0));

    for (int i = 1; i <= n1; i++)
    {
        for (int j = 1; j <= n2; j++)
        {
            if (s1[i - 1] == s2[j - 1])
            {
                dp[i][j] = 1 + dp[i - 1][j - 1];
            }
            else
            {
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
            }
        }
    }
    for (int i = 0; i <= n1; i++)
    {
        for (int j = 0; j <= n2; j++)
        {
            cout << dp[i][j] << " ";
        }
        cout << endl;
    }

    int i = n1;
    int j = n2;

    vector<char> output;

    while (i != 0 && j != 0)
    {
        if (dp[i][j] == dp[i][j - 1])
        {
            j--;
        }
        else if (dp[i][j] == dp[i - 1][j])
        {
            i--;
        }
        else
        {
            output.push_back(s1[i - 1]);
            i--;
            j--;
        }
    }
    reverse(output.begin(), output.end());
    for (auto x : output)
    {
        cout << x;
    }
    cout << endl;
    cout << dp[n1][n2] << endl;
    return 0;
}
