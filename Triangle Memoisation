class Solution {
public:
    int minimumTotalHelper(vector<vector<int>>& triangle,int i,int j,int n,vector<vector<int>> &dp)
    {
        if(i == n-1)
        {
            return triangle[i][j];
        }
        if(dp[i][j] != -1)
        {
            return dp[i][j];
        }
        int op1 = INT_MAX;
        int op2 = INT_MAX;
        if(i+1 < n)
        {
            op1 = triangle[i][j] + minimumTotalHelper(triangle,i+1,j,n,dp);
        }
        if(i+1 < n && j+1<triangle[i+1].size())
        {
            op2 = triangle[i][j] + minimumTotalHelper(triangle,i+1,j+1,n,dp);
        }
        
        return dp[i][j] = min(op1,op2);
    }
    
    int minimumTotal(vector<vector<int>>& triangle) 
    {
        int n = triangle.size();
        vector<vector<int>> dp(n,vector<int>(n,-1));
        return minimumTotalHelper(triangle,0,0,n,dp);
    }
};
