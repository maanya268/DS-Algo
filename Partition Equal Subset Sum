class Solution {
public:
    bool canPartition(vector<int>& nums) 
    {
        
        int n = nums.size();
        int sum = 0;
        for(int i = 0;i<n;i++)
        {
            sum += nums[i];
        }
        
        if(sum % 2)
        {
            return false;
        }
        
        int k = sum/2;
        
        vector<vector<bool>> dp(n,vector<bool>(k+1,false));
        
        for(int i = 0;i<n;i++)
        {
            dp[i][0] = true;
        }
        
        
        for(int i = 1;i<n;i++)
        {
            for(int j = 1;j<=k;j++)
            {
                bool op1 = false;
                bool op2 = false;
                if(j-nums[i] >= 0)
                {
                    op1 = dp[i-1][j-nums[i]];
                }
                op2 = dp[i-1][j];
                dp[i][j] = op1 || op2;
            }
        }
        return dp[n-1][k];
    }
};
