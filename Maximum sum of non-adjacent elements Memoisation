#include<bits/stdc++.h>
int maximumNonAdjacentSumHelper(vector<int> &nums,int n,vector<int> &dp)
{
	if(n < 0)
	{
		return 0;
	}
	if(n == 0)
	{
		return nums[n];
	}
	if(dp[n] != -1)
	{
		return dp[n];
	}
	

	int inc = nums[n] + maximumNonAdjacentSumHelper(nums,n-2,dp);
	
	int exc = maximumNonAdjacentSumHelper(nums,n-1,dp);
	
	return dp[n] = max(inc,exc);
}
int maximumNonAdjacentSum(vector<int> &nums)
{
	int n = nums.size();
	vector<int> dp(n+1,-1);
	return maximumNonAdjacentSumHelper(nums,n-1,dp);
}
