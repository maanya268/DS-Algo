long long int houseRobberHelper(vector<long long int>& valueInHouse)
{
	int n = valueInHouse.size();
	vector<long long int> dp(n+1,0);
	dp[n-1] = valueInHouse[n-1];
	
	for(int i = n-2;i>=0;i--)
	{
		long long int inc = valueInHouse[i] + dp[i+2];
		long long int exc = dp[i+1];
		
		dp[i] = max(inc,exc);
	}
	
	return dp[0];
}

long long int houseRobber(vector<int>& valueInHouse)
{
	int n = valueInHouse.size();
	if(n == 1)
	{
		return valueInHouse[0];
	}
	vector<long long int> temp1,temp2;
	
	for(int i = 0;i<n;i++)
	{
		if(i != 0)
		{
			temp1.push_back(valueInHouse[i]);
		}
		if(i != n-1)
		{
			temp2.push_back(valueInHouse[i]);
		}
	}
	
	return max(houseRobberHelper(temp1),houseRobberHelper(temp2));
}
